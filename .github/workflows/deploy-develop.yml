name: Build and Push Docker Image to ghcr.io

on:
  push:
    branches:
      - dev # Trigger on push to dev branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read # Allows reading the contents of the repository
      packages: write # Allows pushing the Docker image to GitHub Packages (ghcr.io)

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to the GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/carket-dev:${{ github.sha }} .

      # Step 4: Push the Docker image to GitHub Container Registry
      - name: Push Docker image to ghcr.io
        run: |
          docker push ghcr.io/${{ github.repository }}/carket-dev:${{ github.sha }}

      # Optional: Add an additional step to tag the latest version
      - name: Tag Docker image as latest
        if: github.ref == 'refs/heads/dev' # Only tag as latest if on main branch
        run: |
          docker tag ghcr.io/${{ github.repository }}/carket-dev:${{ github.sha }} ghcr.io/${{ github.repository }}/carket-dev:latest
          docker push ghcr.io/${{ github.repository }}/carket-dev:latest

      - name: Update Docker container on VM
        run: |
          echo "$SSH_PRIVATE_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          ssh -i ssh_key.pem -o StrictHostKeyChecking=no $VM_USERNAME@$VM_IP << 'EOF'
          docker pull ghcr.io/merquery-development/carket-backend/carket-dev:latest
          docker stop carket-dev || true
          docker rm carket-dev || true
          docker run -d --env-file ~/carket/.env --name carket-dev -p 3000:3000 ghcr.io/merquery-development/carket-backend/carket-dev:latest
          EOF
        env:
          VM_USERNAME: ${{ secrets.VM_USERNAME }}
          VM_IP: ${{ secrets.VM_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}